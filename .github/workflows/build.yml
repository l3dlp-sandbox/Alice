name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
    paths-ignore:
      - '**.md'
      - '**.spec.js'
      - '.idea'
      - '.vscode'
      - '.dockerignore'
      - 'Dockerfile'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/build.yml'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment: Prod
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            python/.venv
          key: ${{ runner.os }}-python-${{ hashFiles('python/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install Dependencies
        run: npm install

      - name: Get app version from package.json
        id: get_version
        run: echo "APP_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        shell: bash

      - name: Create app-config.json
        shell: bash
        run: |
          printf "{\n" > app-config.json
          printf "  \"VITE_GOOGLE_CLIENT_ID\": \"%s\",\n" "${{ secrets.VITE_GOOGLE_CLIENT_ID }}" >> app-config.json
          printf "  \"VITE_GOOGLE_CLIENT_SECRET\": \"%s\"\n" "${{ secrets.VITE_GOOGLE_CLIENT_SECRET }}" >> app-config.json
          printf "}\n" >> app-config.json
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_GOOGLE_CLIENT_SECRET: ${{ secrets.VITE_GOOGLE_CLIENT_SECRET }}

      - name: Build Release Files
        run: npm run build -- --publish never
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Artifacts for ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ matrix.os }}
          path: release/${{ env.APP_VERSION }}
          if-no-files-found: error
          retention-days: 5

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: true

      - name: Download all release assets
        uses: actions/download-artifact@v4
        with:
          path: ./release-assets
          pattern: release-artifacts-*
          merge-multiple: true

      - name: Display structure of downloaded files
        shell: bash
        run: |
          echo "Downloaded release assets:"
          ls -R ./release-assets

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: './release-assets/*'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generateReleaseNotes: true
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
