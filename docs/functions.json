[
  {
    "type": "function",
    "name": "get_current_datetime",
    "description": "Call this function whenever discussing current events, recent developments, or when time-sensitive information is needed. This function returns the current date, time, and other temporal information needed to provide accurate, up-to-date responses.",
    "strict": true,
    "parameters": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "full",
            "date_only",
            "time_only",
            "year_only"
          ],
          "description": "The format of the datetime information to return. 'full', 'date_only', 'time_only' or 'year_only' are your options. Default is 'full' if not specified."
        }
      },
      "additionalProperties": false,
      "required": [
        "format"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "open_path",
    "description": "Opens a specified file, folder, or application on the user's computer using the default operating system handler, or opens a URL in the default web browser. Use for launching apps, documents, folders, or websites mentioned by the user. Ask user for their username in system, if needed. If user mention that they are on non Windows OS adjust commands accordingly.",
    "strict": true,
    "parameters": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "description": "The target to open. Can be an absolute file path (e.g., '/Users/(username)/file.txt'), a folder path (e.g., 'C:\\Users\\(username)\\Documents'), or a full URL (e.g., 'https://www.google.com'). User is using Windows 11, when you need to open an application define a path to it in this OS. Use this tool to open web search result url for user command."
        }
      },
      "required": [
        "target"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "manage_clipboard",
    "description": "Manages the system clipboard. Can read the current text content from the clipboard or write new text content to it. Useful for transferring text between Alice and other applications.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "read",
            "write"
          ],
          "description": "Specifies the operation to perform: 'read' to get text from the clipboard, 'write' to put text onto the clipboard."
        },
        "content": {
          "type": "string",
          "description": "The text content to write to the clipboard. Required only when the action is 'write'. Ignored for 'read'."
        }
      },
      "required": [
        "action"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "search_torrents",
    "description": "Searches for torrents using Jackett. Use this tool when the user asks to find or download a specific movie, TV show, or file.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The name of the movie, show, or content to search for."
        }
      },
      "required": [
        "query"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "add_torrent_to_qb",
    "description": "Adds a torrent to qBittorrent using a magnet link. Use this tool when the user selects or confirms a torrent to download.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "magnet": {
          "type": "string",
          "description": "The magnet link of the torrent to be added to the download queue."
        }
      },
      "required": [
        "magnet"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "save_memory",
    "description": "Store a long-term memory about the User. The memory should be a short, clear description that you can recall later to better understand and assist him. For example: 'User, enjoys hiking in the mountains.' Categorize the memory by type (e.g., 'personal', 'work', 'hobby').",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The memory content to store. It should be a brief but meaningful description of the fact or event."
        },
        "memoryType": {
          "type": "string",
          "description": "The type of memory, like 'personal', 'work', 'hobby'. Default is 'general'."
        }
      },
      "required": [
        "content",
        "memoryType"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "delete_memory",
    "description": "Forget a long-term memory about User by permanently deleting it from storage. Use this if the memory is no longer valid or User asks you to forget it.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the memory to delete. This ID identifies exactly which memory should be removed."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "recall_memories",
    "description": "Retrieve long-term memories stored about the User. Use the query parameter to find memories relevant to a specific topic or context. If query is omitted, recent memories are returned.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The topic, question, or context to find relevant memories for. Omit to get recent general memories."
        },
        "memoryType": {
          "type": "string",
          "description": "Filter memories by type (e.g., 'personal', 'work'). Can be combined with a query."
        }
      },
      "required": [],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "get_unread_emails",
    "description": "Fetches a list of recent unread emails from the user's Gmail. Provides subject, sender, and snippet for each.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "maxResults": {
          "type": "integer",
          "description": "The maximum number of unread emails to fetch. Defaults to 5 if not specified."
        }
      },
      "required": [],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "search_emails",
    "description": "Searches emails in the user's Gmail based on a query, date range, or other criteria. Provides subject, sender, and snippet.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query. Examples: 'from:boss@example.com', 'subject:project update', 'after:2024/01/15 before:2024/01/20', 'is:important'."
        },
        "maxResults": {
          "type": "integer",
          "description": "The maximum number of emails to return. Defaults to 10."
        }
      },
      "required": [
        "query"
      ],
      "additionalProperties": false
    }
  },
  {
    "type": "function",
    "name": "get_email_content",
    "description": "Fetches the detailed content of a specific email using its message ID. Use this after 'get_unread_emails' or 'search_emails' if the user wants to read a specific email.",
    "strict": false,
    "parameters": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The ID of the email message to fetch."
        }
      },
      "required": [
        "messageId"
      ],
      "additionalProperties": false
    }
  }
]